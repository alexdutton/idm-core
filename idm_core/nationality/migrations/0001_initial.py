# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-12-12 11:14
from __future__ import unicode_literals

import dirtyfields.dirtyfields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('identity', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField()),
                ('alpha_2', models.CharField(db_index=True, max_length=2, null=True, unique=True)),
                ('alpha_3', models.CharField(db_index=True, max_length=3, null=True, unique=True)),
                ('numeric', models.CharField(db_index=True, max_length=3, null=True, unique=True)),
            ],
            options={
                'ordering': ('label',),
            },
        ),
        migrations.CreateModel(
            name='Nationality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attested_by', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('driving-license', 'Driving license'), ('passport', 'Passport'), ('national-identity-document', 'National identity document'), ('bill', 'Bill'), ('visa', 'Visa'), ('deed-poll', 'Deed poll'), ('other', 'Other')], max_length=32), default=[], size=None)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.Country')),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.AddField(
            model_name='country',
            name='identities',
            field=models.ManyToManyField(related_name='nationalities', through='nationality.Nationality', to='identity.Identity'),
        ),
    ]
